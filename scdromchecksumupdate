#!/usr/bin/perl
###############################################################################
# Copyright (c) 2015 by bgvanbur
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
###############################################################################

use strict;
use warnings;

if ( $#ARGV < 0 || $#ARGV > 1 ) {
    &Help();
}

my $romFileIn = $ARGV[0];
my $romFileOut = $#ARGV < 1 ? '' : $ARGV[1];

my $romLength = -s $romFileIn;
my $romData = '';

if ( $romLength < 0x200 ) {
    printf("file length : 0x%8.8X\n",$romLength);
    print STDERR "file not long enough to be a ROM\n";
}

open( ROM, $romFileIn ) or die "Could not read file: $romFileIn\n";
binmode ROM;
read( ROM, $romData, $romLength );
close ROM;

my $endOfRomPointer = 0x1A4;
my $checksumPointer = 0x18E;
my $startOfChecksum = 0x200;


my $endOfRom = unpack("N",substr($romData,$endOfRomPointer,4));
my $checksumSaved = unpack("n",substr($romData,$checksumPointer,2));

if ( $romLength < $endOfRom+1 ) {
    printf("file length : 0x%8.8X\n",$romLength);
    printf("rom length  : 0x%8.8X\n",$endOfRom);
    print STDERR "End of ROM indication outside of end of file\n";
    exit;
}

my $checksumCurrent = 0;
for (my $address = $startOfChecksum; $address < $endOfRom; $address += 2 ) {
    $checksumCurrent += unpack("n",substr($romData,$address,2));
}
$checksumCurrent &= 0xFFFF;

if ( $checksumSaved != $checksumCurrent ) {
    if ( $romFileOut ne '' ) {
	print "Updating checksum\n";
	substr($romData,$checksumPointer,2) = pack("n",$checksumCurrent);

	open( ROM, '>'.$romFileOut ) or die "Could not read file: $romFileOut\n";
	binmode ROM;
	print ROM $romData;
	close ROM;
    } else {
	print "Checksum out of date\n";
    }
}


sub Help {
    die '
scdromchecksumupdate [romfile] [romfilesave]

[description]
  Updates Genesis ROM word checksum.
  Uses addresses between 0x200 and address pointed to by long at 0x1A4.
  Checksum is stored at address 0x18E.

';
}
