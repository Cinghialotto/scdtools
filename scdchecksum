#!/usr/bin/perl
###############################################################################
# would be nice to make a generic checksummer...
###############################################################################
# this puts 16 bit checksum of all the 16 bit words starting at byte 2 at
# bytes 0-1
###############################################################################

use strict;
use warnings;

if ( $#ARGV < 1 ) {
    &Help();
}

foreach my $file (@ARGV) {
    open( BIN, "<$file" ) or die "Cannot read $file\n";
    binmode BIN;
    my $size = -s $file;
    my $buffer = '';
    if ( ! read(BIN,$buffer,$size) ) {
	die "Cannot read $file\n";
    }
    close BIN;
    my $sum = 0x0000;
    for ( my $i = 2; $i < $size-1; $i += 2 ) {
	$sum += unpack("n",substr($buffer,$i,2));
    }
    substr($buffer,0,2) = pack("n",$sum);
    open( BIN, ">$file" ) or die "Cannot write $file\n";
    binmode BIN;
    print BIN $buffer;
    close BIN;
}

sub Help {
    die '
scdchecksum <files>

[description]
  Computes a 16 bit checksum on all the 16 bit pairs in the file except the
  first 16 bit pair.  It replaces the first 16 bit pair with the computed
  checksum.  Was originally written for error handling on Sega CD file reading.

';
}
